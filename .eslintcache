[{"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\index.js":"1","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\firebase.js":"2","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\readModel.js":"3","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\App.js":"4","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\studyModel.js":"5","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\show.js":"6","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\course.js":"7","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebar.js":"8","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\courseInfo.js":"9","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebarDeadlines.js":"10","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\home.js":"11","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\settings.js":"12","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\glue.js":"13","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\canvasSource.js":"14","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\usePromiseJSON.js":"15","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseView.js":"16","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarView.js":"17","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarDeadlinesView.js":"18","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\settingsView.js":"19","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\homeView.js":"20","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseInfoView.js":"21","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\useModelProp.js":"22","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\calendarSource.js":"23","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\apiConfig.js":"24","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\layoutVars.js":"25","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\modelContext.js":"26"},{"size":433,"mtime":1607589996296,"results":"27","hashOfConfig":"28"},{"size":576,"mtime":1607589996296,"results":"29","hashOfConfig":"28"},{"size":246,"mtime":1607506968760,"results":"30","hashOfConfig":"28"},{"size":1079,"mtime":1608217790215,"results":"31","hashOfConfig":"28"},{"size":6176,"mtime":1608217655799,"results":"32","hashOfConfig":"28"},{"size":377,"mtime":1607087476810,"results":"33","hashOfConfig":"28"},{"size":178,"mtime":1607937205620,"results":"34","hashOfConfig":"28"},{"size":183,"mtime":1607937198927,"results":"35","hashOfConfig":"28"},{"size":198,"mtime":1607937202383,"results":"36","hashOfConfig":"28"},{"size":226,"mtime":1607937182568,"results":"37","hashOfConfig":"28"},{"size":168,"mtime":1608216791092,"results":"38","hashOfConfig":"28"},{"size":194,"mtime":1608219035103,"results":"39","hashOfConfig":"28"},{"size":7004,"mtime":1608219024168,"results":"40","hashOfConfig":"28"},{"size":1935,"mtime":1607586592124,"results":"41","hashOfConfig":"28"},{"size":494,"mtime":1607626915137,"results":"42","hashOfConfig":"28"},{"size":7022,"mtime":1607955985235,"results":"43","hashOfConfig":"28"},{"size":2660,"mtime":1608217779510,"results":"44","hashOfConfig":"28"},{"size":9180,"mtime":1608218219378,"results":"45","hashOfConfig":"28"},{"size":5216,"mtime":1608217763907,"results":"46","hashOfConfig":"28"},{"size":9191,"mtime":1608216791090,"results":"47","hashOfConfig":"28"},{"size":9791,"mtime":1608217742818,"results":"48","hashOfConfig":"28"},{"size":359,"mtime":1607856858323,"results":"49","hashOfConfig":"28"},{"size":2925,"mtime":1608216791089,"results":"50","hashOfConfig":"28"},{"size":475,"mtime":1607423884890,"results":"51","hashOfConfig":"28"},{"size":101,"mtime":1608217622620,"results":"52","hashOfConfig":"28"},{"size":104,"mtime":1607937960604,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"cxbct",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\index.js",[],["111","112"],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\firebase.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\readModel.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\App.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\studyModel.js",["113","114"],"import firebase from './firebase.js'\r\n\r\nexport class StudyModel{\r\n    constructor(courses=[],comments=[],deadlines=[[]],currentCourse=null,books=[]){\r\n        this.courses=courses;\r\n        this.subscribers=[];\r\n        this.deadlines=deadlines;\r\n        this.comments=comments;\r\n        this.currentCourse=currentCourse;\r\n        this.books=books;\r\n        this.bool=true;\r\n       }\r\n\r\n  updateModel(userId){\r\n    var ref = firebase.database().ref('/users/' + userId);\r\n    var dbString;\r\n    ref.on('value', (snapshot)=>{\r\n      dbString = snapshot.val();\r\n      let modelObject= {};\r\n      if(dbString!==null && dbString !== undefined){\r\n        modelObject=JSON.parse(dbString.study_model);\r\n        this.comments = modelObject.comments;\r\n        if(modelObject.comments!==undefined){\r\n          this.comments = modelObject.comments;\r\n        } else {this.comments=[];}\r\n        this.currentCourse = modelObject.currentCourse;\r\n        if(modelObject.deadlines!==undefined){\r\n          this.deadlines =modelObject.deadlines;\r\n        } else {this.deadlines=[[]];}\r\n        if(modelObject.courses!==undefined){\r\n          this.courses = modelObject.courses;\r\n        } else {this.courses=[];}\r\n        if(modelObject.books!==undefined){\r\n          this.books = modelObject.books;\r\n        } else {this.books=[];}\r\n      }\r\n      //När sidan laddas finns det 4 subscribers och då laddar man om sidan\r\n      //för att lägga in de nyinladdade kurserna som hämtats. Sedan lägger man\r\n      //till setDB observern för att uppdatera till DB korrekt.\r\n      if(this.bool){\r\n        this.notifyObservers();\r\n        this.addObserver(() => this.setDB(userId));\r\n        this.bool=false;\r\n      }\r\n    });\r\n    this.updateCourses();\r\n  }\r\n  updateCourses(){\r\n  this.courses.forEach((item, i) => {\r\n    var ref = firebase.database().ref('/courses/' + item);\r\n    var dbString;\r\n    ref.on('value', (snapshot)=>{\r\n      dbString = snapshot.val();\r\n      let modelComments= {};\r\n      if(dbString!==null && dbString !== undefined){\r\n        modelComments=JSON.parse(dbString.comments);\r\n        this.comments[i] = modelComments;\r\n      }\r\n      if(i===this.courses.length-1) { this.notifyObservers();}\r\n    });\r\n  });\r\n}\r\nsetDB(userId){\r\n  let modelObject = JSON.stringify(this);\r\n  firebase.database().ref('users/' + userId).set({\r\n    study_model: modelObject\r\n  });\r\n\r\n  this.courses.forEach((item, i) => {\r\n    var modelComment = JSON.stringify(this.comments[i]);\r\n    firebase.database().ref('courses/' + item).set({\r\n      comments: modelComment\r\n    });\r\n  });\r\n}\r\n\r\naddBook(name, img, course){\r\n  this.books=[[name, img, course, []],...this.books]\r\n}\r\n\r\n\r\n  addCourse(name){\r\n    if(!this.courses.includes(name)){\r\n      this.courses=[name, ...this.courses];\r\n      this.deadlines=[[], ...this.deadlines];\r\n      this.comments=[[], ...this.comments];\r\n      //1) combine the arrays:\r\n      var list = [];\r\n      for (var j = 0; j < this.courses.length; j++)\r\n        list.push({'courses': this.courses[j], 'deadlines': this.deadlines[j], 'comments': this.comments[j]});\r\n\r\n        //2) sort:\r\n      list.sort(function(a, b) {\r\n        return ((a.courses < b.courses) ? -1 : ((a.courses === b.courses) ? 0 : 1));\r\n      //Sort could be modified to, for example, sort on the age\r\n      // if the name is the same.\r\n    });\r\n  //3) separate them back out:\r\n  for (var k = 0; k < list.length; k++) {\r\n      this.courses[k] = list[k].courses;\r\n      this.deadlines[k] = list[k].deadlines;\r\n      this.comments[k] = list[k].comments;\r\n    }\r\n    this.updateCourses();\r\n  }\r\n   }\r\n\r\n   removeCourse(course){\r\n     const index = this.courses.indexOf(course);\r\n    if (index > -1) {\r\n      this.courses.splice(index, 1);\r\n      this.deadlines.splice(index, 1);\r\n      this.comments.splice(index, 1);\r\n    }\r\n     if (course===this.currentCourse)\r\n        this.currentCourse=null\r\n     this.notifyObservers();\r\n   }\r\n\r\n    setCurrentCourse(course){\r\n      this.currentCourse=course;\r\n      this.notifyObservers();\r\n    }\r\n\r\n    addDeadline(name,date,courseName){\r\n\r\n      const index = this.getCourseIndex(courseName);\r\n      // this.deadlines[courseIndex] ger en lista [[courseName,name,date]]\r\n      this.deadlines[index]=[[courseName,name,date],...this.deadlines[index]];\r\n      this.deadlines[index].sort(function(a,b){\r\n          if(a[2]<b[2])\r\n            return -1;\r\n          else if(a[2]>b[2])\r\n            return 1;\r\n        })\r\n      //dont touch or everything breaks\r\n      this.deadlines=[...this.deadlines];\r\n      this.notifyObservers();\r\n    }\r\n\r\n\r\n   removeDeadline(deadline){\r\n\r\n     const index=this.getCourseIndex(deadline[0]);\r\n     const itemIndex = this.deadlines[index].findIndex(function(item){\r\n       return item===deadline;\r\n     });\r\n\r\n     if (itemIndex > -1) {\r\n       this.deadlines[index].splice(itemIndex,1);\r\n     }\r\n     this.deadlines=[...this.deadlines];\r\n     this.notifyObservers();\r\n   }\r\n\r\n    addComment(text){\r\n      //Currentcourse är namnet på valda kursen\r\n      const index = this.getCourseIndex(this.currentCourse);\r\n      this.comments[index]=[[text,false],...this.comments[index]];\r\n      this.comments=[...this.comments]\r\n      this.notifyObservers();\r\n    }\r\n\r\n    checkBox(value){\r\n      const index=this.getCourseIndex(this.currentCourse);\r\n      const commentIndex = this.comments[index].findIndex(ele => ele[0]===value[0]);\r\n      if (this.comments[index][commentIndex][1]===true)\r\n       this.comments[index][commentIndex][1]=false;\r\n       else{\r\n         this.comments[index][commentIndex][1]=true;\r\n\r\n       }\r\n       this.comments=[...this.comments]\r\n      this.notifyObservers();\r\n    }\r\n\r\n   removeComment(com){\r\n     const index=this.getCourseIndex(this.currentCourse);\r\n     const itemIndex = this.comments[index].findIndex(ele => ele===com);\r\n\r\n     if (index > -1) {\r\n       this.comments[index].splice(itemIndex,1);\r\n     }\r\n     this.comments=[...this.comments]\r\n\r\n     this.notifyObservers();\r\n   }\r\n\r\n   getCourseIndex(name){\r\n         const course = this.courses.findIndex(ele => ele===name);\r\n         return course\r\n     }\r\n\r\n   getAllDeadlines(){\r\n     var deadlineList=[];\r\n     // deadlines     [courseName,Name,Date]\r\n     if (this.deadlines===undefined)\r\n        return []\r\n    this.deadlines.forEach(elemen => elemen.forEach(ele=>deadlineList.push(ele)));\r\n     if (deadlineList.length===0){\r\n       return []\r\n     }\r\n     deadlineList.sort(function(a,b){\r\n         if(a[2]<b[2])\r\n           return -1;\r\n         else if(a[2]>b[2])\r\n           return 1;\r\n       })\r\n     return deadlineList\r\n   }\r\n\r\n  addObserver(callback){\r\n   this.subscribers=this.subscribers.concat(callback);\r\n  }\r\n  removeObserver(obs){\r\n  this.subscribers=this.subscribers.filter(o=>o!==obs);\r\n }\r\n  notifyObservers(){\r\n    this.subscribers.forEach(callback=> {\r\n  try{callback()}catch(err){\r\n        console.error(\"Error \", err, callback);}})\r\n  }\r\n\r\n\r\n\r\n}\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\show.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\course.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebar.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\courseInfo.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebarDeadlines.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\home.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\settings.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\glue.js",["115","116","117","118","119","120","121","122","123","124"],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\canvasSource.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\usePromiseJSON.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarDeadlinesView.js",["125","126","127","128","129"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {drawerWidth} from './../layoutVars.js';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 4,\r\n    width: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  filter:{\r\n    marginLeft:10,\r\n  },\r\n  menu:{\r\n  width: 200,\r\n},\r\nadd:{\r\nmarginTop: 10,\r\n},\r\n  formControl:{\r\n    minWidth: 120,\r\n\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  cellDeadline:{\r\n    maxWidth: 95,\r\n    wordWrap: 'break-word',\r\n  },\r\n}));\r\n\r\nexport const SidebarDeadlinesView=({noCourses,today,date,courses,deadlineIndex,latestDeadline,courseType,type,onType,onRemove,onDate,onCourseType,deadlines,onCreate,onName,invalidDeadlineName,invalidDate})=> {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deadlinesList, setDeadlinesList] = React.useState([]);\r\n  function handleClose(){setOpen(false)}\r\n  function handleClickOpen(){setOpen(true)}\r\n  function handleCloseAdd(){setOpen(false);onCreate()}\r\n  // Getcourseindex return -1 if name == All\r\n   function getCourses() {\r\n     if (deadlineIndex >= 0) return setDeadlinesList(deadlines[deadlineIndex]);\r\n     setDeadlinesList(getAllDeadlines())\r\n   }\r\n\r\n  function getAllDeadlines(){\r\n    var list=[];\r\n    // deadlines     [courseName,Name,Date]\r\n    if (deadlines===undefined)\r\n       return []\r\n   deadlines.forEach(elemen => elemen.forEach(ele=>ele.length>0?list.push(ele):list=list));\r\n    if (list.length===0){\r\n      return []\r\n    }\r\n    list.sort(function(a,b){\r\n        if(a[2]<b[2])\r\n          return -1;\r\n        else if(a[2]>b[2])\r\n          return 1;\r\n      })\r\n    return list\r\n  }\r\n\r\n  React.useEffect(function(){\r\n     getCourses();\r\n  }, [deadlineIndex,deadlines]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n        {/*Header*/}\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar} >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Deadlines\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n        {/*Sidebar, Displays deadlines*/}\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n      {/*New Deadline Button/Window*/}\r\n\r\n        <div className={classes.toolbar} />\r\n\r\n        <div align=\"center\">\r\n        <Button onClick={handleClickOpen} variant=\"outlined\" disabled={noCourses} className={classes.add}>Add deadline</Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">New deadline</DialogTitle>\r\n              <DialogContent>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                  Course\r\n                </InputLabel>\r\n                <Select\r\n                  value={courseType}\r\n                  labelId=\"demo-simple-select-placeholder-label-label\"\r\n                  id=\"demo-simple-select-placeholder-label\"\r\n                  onChange={(event)=>{onCourseType(event.target.value)}}\r\n\r\n                >\r\n                {courses.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n\r\n\r\n                </Select>\r\n              </FormControl>\r\n              <InputLabel shrink id=\"name\">\r\n                Name\r\n              </InputLabel>\r\n                <TextField\r\n                  onChange={(event)=>onName(event.target.value)}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  error={invalidDeadlineName}\r\n                  helperText={invalidDeadlineName?'Empty field':''}\r\n                  onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter' && !invalidDate && !invalidDeadlineName && today<date) {\r\n                                handleCloseAdd()\r\n                                }\r\n                              }}\r\n                />\r\n                <InputLabel shrink id=\"date\">\r\n                  Date\r\n                </InputLabel>\r\n                <TextField\r\n                  onChange={(event)=>{onDate(event.target.value)}}\r\n                  autoFocus\r\n                  placeholder=\"yyyy-mm-dd\"\r\n                  margin=\"dense\"\r\n                  min={today}\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  error={invalidDate||today>date}\r\n                  helperText={invalidDate?'Invalid input':today>date?'Date has passed':''}\r\n                  onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter' && !invalidDate && !invalidDeadlineName && today<date) {\r\n                                handleCloseAdd()\r\n                                }\r\n                              }}\r\n                  fullWidth\r\n                />\r\n\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleCloseAdd} disabled={invalidDeadlineName||invalidDate||today>date} color=\"primary\">\r\n                  Add\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        <div className={classes.filter}>\r\n        Filter:\r\n        <span> </span>\r\n        <Select\r\n          labelId=\"select\"\r\n          id=\"select\"\r\n          value={type}\r\n          onChange={(event)=>{onType(event.target.value)}}\r\n        >\r\n        <MenuItem key=\"All\" value=\"All\" align=\"center\">All</MenuItem>\r\n        {courses.map((option) => (\r\n          <MenuItem key={option} value={option} align=\"center\">\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n        </Select>\r\n\r\n        </div>\r\n        <Divider />\r\n\r\n         <Table style={{ width: \"auto\", tableLayout: \"auto\" }}>\r\n           <TableHead>\r\n             <TableRow>\r\n               <TableCell>Course</TableCell>\r\n               <TableCell align=\"right\">Name</TableCell>\r\n               <TableCell align=\"right\">Deadline</TableCell>\r\n               <TableCell  className={classes.small}  width={50}> </TableCell>\r\n             </TableRow>\r\n           </TableHead>\r\n           <TableBody>\r\n             {deadlinesList.map((row) => (\r\n               <TableRow key={row}  width={335}style={{background:latestDeadline[0]===row[0]&&latestDeadline[1]===row[1]&&latestDeadline[2]===row[2]?fade('#555555', 0.06):\"primary\"}}>\r\n               <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                 {row[0]}\r\n               </TableCell>\r\n                 <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                   {row[1]}\r\n                 </TableCell>\r\n                 <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                  {row[2]}\r\n                 </TableCell>\r\n                 <TableCell width={50}>\r\n                 <Button onClick={()=>{onRemove(row)}} size=\"small\">\r\n                   <DeleteIcon className={classes.icon} />\r\n                 </Button>\r\n                 </TableCell>\r\n               </TableRow>\r\n          ))}\r\n           </TableBody>\r\n         </Table>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\settingsView.js",["130","131","132","133","134","135","136","137"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {drawerWidth} from './../layoutVars.js';\r\nimport {sidebarWidth} from './../layoutVars.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${sidebarWidth}px )`,\r\n      marginLeft: sidebarWidth,\r\n    },\r\n    mainContent:{\r\n      width:`calc(100% - ${drawerWidth}px- ${sidebarWidth}px)`,\r\n      marginLeft: sidebarWidth,\r\n      marginRight:drawerWidth,\r\n\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n  }));\r\n\r\n\r\n  export const SettingsView=({updateCourses,updateFavouriteCourses,setDefaultSource,setCustomSource,retrieveCourses,setKey})=> {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    function handleClose(){setOpen(false)}\r\n    function handleClickOpen(){setOpen(true)}\r\n    function setCustom(){setOpen(false);setCustomSource()}\r\n    function setDefault(){setOpen(false);setDefaultSource()}\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"relative\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Settings\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main>\r\n          <div className={classes.mainContent}>\r\n            <div className={classes.heroContent}>\r\n            <Container maxWidth=\"sm\" align=\"center\">\r\n              <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Settings\r\n              </Typography>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                      Enter Custom API Key\r\n                  </Button>\r\n                  <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Add new course</DialogTitle>\r\n                    <DialogContent>\r\n                      <TextField\r\n                        onChange={(event)=>setKey(event.target.value)}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"Canvas_API_Key\"\r\n                        label=\"Canvas API Key\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                      />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={setDefault} color=\"primary\">\r\n                        Use Default Courses\r\n                      </Button>\r\n                      <Button onClick={setCustom} color=\"primary\">\r\n                        Get Custom Courses\r\n                      </Button>\r\n\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick={updateCourses}>\r\n                        Retrieve All Courses\r\n                    </Button>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick={updateFavouriteCourses}>\r\n                        Retrieve Favourite Courses\r\n                    </Button>\r\n            </Container>\r\n          </div>\r\n          </div>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\homeView.js",["138","139"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {drawerWidth} from './../layoutVars.js';\r\nimport {sidebarWidth} from './../layoutVars.js';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\nroot: {\r\n  display: 'flex',\r\n},\r\nappBar: {\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  width:`calc(100% - ${drawerWidth}px - ${sidebarWidth}px )`,\r\n  marginLeft:sidebarWidth,\r\n  marginRight:drawerWidth,\r\n},\r\nmainContent:{\r\n  width:`calc(100% - ${drawerWidth}px - ${sidebarWidth}px )`,\r\n  marginLeft:sidebarWidth,\r\n  marginRight:drawerWidth,\r\n  marginTop:theme.spacing(4),\r\n},\r\ncontainer: {\r\npaddingTop: theme.spacing(4),\r\npaddingBottom: theme.spacing(4),\r\n},\r\ncontent: {\r\n  flexGrow: 1,\r\n  padding: theme.spacing(3),\r\n},\r\npaper: {\r\npadding: theme.spacing(2),\r\ndisplay: 'flex',\r\noverflow: 'auto',\r\nflexDirection: 'column',\r\n},\r\ncheck:{\r\nbackgroundColor: fade('#555555', 0.06),\r\n\r\n},\r\n}));\r\n\r\n\r\n\r\nexport const HomeView= ({h,invalidCommentName,courses,courseType,onCourseType,onCreateComment,comments,onTextComment,onCheck,onRemoveComment,nav}) =>{\r\nconst classes = useStyles();\r\nconst [open, setOpen] = React.useState(false);\r\nfunction handleClose(){setOpen(false)}\r\nfunction handleClickOpen(){\r\n  setOpen(true)}\r\nfunction handleCloseAdd(){setOpen(false);onCreateComment()}\r\n/*Moves checked items to bottom of list.*/\r\n/*To be able to find the checked comments, we need to save the courseName aswell to keep track of what course the comment belongs to.*/\r\nlet checked =[];\r\nlet unChecked = [];\r\ncomments.forEach((elemen,i) => elemen.forEach(comment=>{\r\n    if (comment[1]===false)\r\n      unChecked=[[comment[0],comment[1],courses[i]],...unChecked]\r\n    else\r\n      checked=[[comment[0],comment[1],courses[i]],...checked]\r\n    }))\r\nreturn (\r\n  <div className={classes.root}>\r\n    <CssBaseline />\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n          Home\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    <div className={classes.mainContent}>\r\n      <main className={classes.content}>\r\n      <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n        Study Mouse\r\n      </Typography>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n             {/* To-do */}\r\n               <Paper className={classes.paper}>\r\n               <Table>\r\n               <TableHead>\r\n                 <TableRow>\r\n                 <TableCell>\r\n                 </TableCell>\r\n                  <TableCell>\r\n                    Course\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    Name\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={handleClickOpen}>\r\n                        +\r\n                    </Button>\r\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                      <DialogTitle id=\"form-dialog-title\">Add a To-Do</DialogTitle>\r\n                      <DialogContent>\r\n                      <FormControl className={classes.formControl}>\r\n                        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                          Course\r\n                        </InputLabel>\r\n                        <Select\r\n                          value={courseType}\r\n                          labelId=\"demo-simple-select-placeholder-label-label\"\r\n                          id=\"demo-simple-select-placeholder-label\"\r\n                          onChange={(event)=>{onCourseType(event.target.value)}}\r\n                        >\r\n                        {courses.map((option) => (\r\n                          <MenuItem key={option} value={option}>\r\n                            {option}\r\n                          </MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                        <TextField\r\n                          onChange={(event)=>onTextComment(event.target.value)}\r\n                          autoFocus\r\n                          margin=\"dense\"\r\n                          id=\"name\"\r\n                          label=\"Name\"\r\n                          type=\"text\"\r\n                          fullWidth\r\n                          error={invalidCommentName}\r\n                          helperText={invalidCommentName?'Name taken':''}\r\n                          onKeyPress={(ev) => {\r\n                             if (ev.key === 'Enter'&& !invalidCommentName) {\r\n                                 handleCloseAdd()\r\n                                 }\r\n                               }}/>\r\n\r\n                      </DialogContent>\r\n                      <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                          Cancel\r\n                        </Button>\r\n                        <Button onClick={handleCloseAdd} disabled={invalidCommentName}color=\"primary\">\r\n                          Add\r\n                        </Button>\r\n                      </DialogActions>\r\n                    </Dialog>\r\n                 </TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n               <TableBody>\r\n                   {unChecked.map((value) => {\r\n                     const labelId = `checkbox-list-label-${value}`;\r\n                     return (\r\n                       <TableRow key={value}>\r\n                       <TableCell>\r\n                           <Checkbox\r\n                             edge=\"start\"\r\n                             checked={value[1]}\r\n                             disableRipple\r\n                             onChange={()=>{onCheck(value)}}\r\n                             inputProps={{ 'aria-labelledby': labelId }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {value[2]}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          {value[0]}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                          <Button onClick={()=>{onRemoveComment(value)}}>\r\n                            <DeleteIcon className={classes.icon} />\r\n                          </Button>\r\n                          </TableCell>\r\n                       </TableRow>\r\n                     );\r\n                   })}\r\n                 {checked.map((value) => {\r\n                   const labelId = `checkbox-list-label-${value}`;\r\n                   return (\r\n                     <TableRow key={value}>\r\n                     <TableCell>\r\n                         <Checkbox\r\n                           edge=\"start\"\r\n                           checked={value[1]}\r\n                           disableRipple\r\n                           onChange={()=>{onCheck(value)}}\r\n                           inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {value[2]}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {value[0]}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        <Button onClick={()=>{onRemoveComment(value)}}>\r\n                          <DeleteIcon className={classes.icon} />\r\n                        </Button>\r\n                        </TableCell>\r\n                     </TableRow>\r\n                   );\r\n                 })}\r\n                   </TableBody>\r\n                   </Table>\r\n               </Paper>\r\n        </Container>\r\n      </main>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseInfoView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\useModelProp.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\calendarSource.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\apiConfig.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\layoutVars.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\modelContext.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":130,"column":34,"nodeType":"146","messageId":"147","endLine":130,"endColumn":42},{"ruleId":"144","severity":1,"message":"145","line":203,"column":24,"nodeType":"146","messageId":"147","endLine":203,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":42,"column":10,"nodeType":"150","endLine":42,"endColumn":25,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":46,"column":9,"nodeType":"150","endLine":46,"endColumn":21,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":46,"column":10,"nodeType":"155","endLine":46,"endColumn":20},{"ruleId":"148","severity":1,"message":"156","line":69,"column":3,"nodeType":"150","endLine":69,"endColumn":25,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":91,"column":10,"nodeType":"160","messageId":"161","endLine":91,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":177,"column":40,"nodeType":"164","messageId":"165","endLine":177,"endColumn":42},{"ruleId":"158","severity":1,"message":"166","line":188,"column":16,"nodeType":"160","messageId":"161","endLine":188,"endColumn":21},{"ruleId":"158","severity":1,"message":"167","line":190,"column":17,"nodeType":"160","messageId":"161","endLine":190,"endColumn":23},{"ruleId":"158","severity":1,"message":"168","line":192,"column":10,"nodeType":"160","messageId":"161","endLine":192,"endColumn":14},{"ruleId":"158","severity":1,"message":"169","line":192,"column":16,"nodeType":"160","messageId":"161","endLine":192,"endColumn":23},{"ruleId":"158","severity":1,"message":"170","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"171","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":89,"column":85,"nodeType":"160","messageId":"174","endLine":89,"endColumn":89},{"ruleId":"144","severity":1,"message":"145","line":93,"column":15,"nodeType":"146","messageId":"147","endLine":93,"endColumn":23},{"ruleId":"148","severity":1,"message":"175","line":104,"column":6,"nodeType":"150","endLine":104,"endColumn":31,"suggestions":"176"},{"ruleId":"158","severity":1,"message":"177","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"178","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":19},{"ruleId":"158","severity":1,"message":"179","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":19},{"ruleId":"158","severity":1,"message":"180","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":17},{"ruleId":"158","severity":1,"message":"181","line":9,"column":8,"nodeType":"160","messageId":"161","endLine":9,"endColumn":12},{"ruleId":"158","severity":1,"message":"182","line":14,"column":8,"nodeType":"160","messageId":"161","endLine":14,"endColumn":12},{"ruleId":"158","severity":1,"message":"183","line":15,"column":8,"nodeType":"160","messageId":"161","endLine":15,"endColumn":24},{"ruleId":"158","severity":1,"message":"184","line":22,"column":8,"nodeType":"160","messageId":"161","endLine":22,"endColumn":25},{"ruleId":"158","severity":1,"message":"183","line":17,"column":8,"nodeType":"160","messageId":"161","endLine":17,"endColumn":24},{"ruleId":"158","severity":1,"message":"170","line":22,"column":8,"nodeType":"160","messageId":"161","endLine":22,"endColumn":22},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'courseType'. Either include it or remove the dependency array.","ArrayExpression",["187"],"React Hook React.useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.",["188"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook React.useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.",["189"],"no-unused-vars","'currentIndex' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'error' is assigned a value but never used.","'errorF' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","no-self-assign","'list' is assigned to itself.","selfAssignment","React Hook React.useEffect has a missing dependency: 'getCourses'. Either include it or remove the dependency array.",["190"],"'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'ArrowBackIosIcon' is defined but never used.","'DialogContentText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [courseType, currentCourse]",{"range":"199","text":"200"},"Update the dependencies array to be: [courses]",{"range":"201","text":"202"},"Update the dependencies array to be: [model]",{"range":"203","text":"204"},"Update the dependencies array to be: [deadlineIndex, deadlines, getCourses]",{"range":"205","text":"206"},[1880,1895],"[courseType, currentCourse]",[1980,1992],"[courses]",[2487,2509],"[model]",[3394,3419],"[deadlineIndex, deadlines, getCourses]"]
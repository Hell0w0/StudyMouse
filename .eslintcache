[{"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\index.js":"1","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\firebase.js":"2","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\readModel.js":"3","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\App.js":"4","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\studyModel.js":"5","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebar.js":"6","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\home.js":"7","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\settings.js":"8","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\courseInfo.js":"9","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\show.js":"10","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\modelContext.js":"11","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\course.js":"12","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebarDeadlines.js":"13","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\settingsView.js":"14","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\glue.js":"15","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarView.js":"16","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseView.js":"17","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\homeView.js":"18","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseInfoView.js":"19","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarDeadlinesView.js":"20","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\layoutVars.js":"21","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\useModelProp.js":"22","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\usePromiseJSON.js":"23","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\calendarSource.js":"24","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\canvasSource.js":"25","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\apiConfig.js":"26"},{"size":433,"mtime":1607589996296,"results":"27","hashOfConfig":"28"},{"size":576,"mtime":1607589996296,"results":"29","hashOfConfig":"28"},{"size":246,"mtime":1607506968760,"results":"30","hashOfConfig":"28"},{"size":1079,"mtime":1608217790215,"results":"31","hashOfConfig":"28"},{"size":6284,"mtime":1608280268237,"results":"32","hashOfConfig":"28"},{"size":183,"mtime":1607937198927,"results":"33","hashOfConfig":"28"},{"size":168,"mtime":1608216791092,"results":"34","hashOfConfig":"28"},{"size":194,"mtime":1608219035103,"results":"35","hashOfConfig":"28"},{"size":198,"mtime":1607937202383,"results":"36","hashOfConfig":"28"},{"size":377,"mtime":1607087476810,"results":"37","hashOfConfig":"28"},{"size":104,"mtime":1607937960604,"results":"38","hashOfConfig":"28"},{"size":178,"mtime":1607937205620,"results":"39","hashOfConfig":"28"},{"size":226,"mtime":1607937182568,"results":"40","hashOfConfig":"28"},{"size":5216,"mtime":1608217763907,"results":"41","hashOfConfig":"28"},{"size":6982,"mtime":1608278428424,"results":"42","hashOfConfig":"28"},{"size":2755,"mtime":1608278428423,"results":"43","hashOfConfig":"28"},{"size":7024,"mtime":1608278428421,"results":"44","hashOfConfig":"28"},{"size":9499,"mtime":1608278428422,"results":"45","hashOfConfig":"28"},{"size":9823,"mtime":1608278428420,"results":"46","hashOfConfig":"28"},{"size":9099,"mtime":1608278428423,"results":"47","hashOfConfig":"28"},{"size":101,"mtime":1608217622620,"results":"48","hashOfConfig":"28"},{"size":359,"mtime":1607856858323,"results":"49","hashOfConfig":"28"},{"size":494,"mtime":1607626915137,"results":"50","hashOfConfig":"28"},{"size":2937,"mtime":1608280933252,"results":"51","hashOfConfig":"28"},{"size":1935,"mtime":1607586592124,"results":"52","hashOfConfig":"28"},{"size":475,"mtime":1607423884890,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"cxbct",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\index.js",[],["112","113"],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\firebase.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\readModel.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\App.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\studyModel.js",["114"],"import firebase from './firebase.js'\r\n\r\nexport class StudyModel{\r\n    constructor(courses=[],comments=[],deadlines=[],currentCourse=null){\r\n        this.courses=courses;\r\n        this.subscribers=[];\r\n        this.deadlines=deadlines;\r\n        this.comments=comments;\r\n        this.currentCourse=currentCourse;\r\n        this.bool=true;\r\n       }\r\n\r\n  updateModel(userId){\r\n    var ref = firebase.database().ref('/users/' + userId);\r\n    var dbString;\r\n    ref.on('value', (snapshot)=>{\r\n      dbString = snapshot.val();\r\n      let modelObject= {};\r\n      if(dbString!==null && dbString !== undefined){\r\n        modelObject=JSON.parse(dbString.study_model);\r\n        this.comments = modelObject.comments;\r\n        if(modelObject.comments!==undefined){\r\n          this.comments = modelObject.comments;\r\n        } else {this.comments=[];}\r\n        this.currentCourse = modelObject.currentCourse;\r\n        if(modelObject.deadlines!==undefined){\r\n          this.deadlines =modelObject.deadlines;\r\n        } else {this.deadlines=[];}\r\n        if(modelObject.courses!==undefined){\r\n          this.courses = modelObject.courses;\r\n        } else {this.courses=[];}\r\n      }\r\n      //När sidan laddas finns det 4 subscribers och då laddar man om sidan\r\n      //för att lägga in de nyinladdade kurserna som hämtats. Sedan lägger man\r\n      //till setDB observern för att uppdatera till DB korrekt.\r\n      if(this.bool){\r\n        this.notifyObservers();\r\n        this.addObserver(() => this.setDB(userId));\r\n        this.bool=false;\r\n      }\r\n    });\r\n    this.updateCourses();\r\n  }\r\n  updateCourses(){\r\n  this.courses.forEach((item, i) => {\r\n    var ref = firebase.database().ref('/courses/' + item);\r\n    var dbString;\r\n    ref.on('value', (snapshot)=>{\r\n      dbString = snapshot.val();\r\n      let modelComments= {};\r\n      if(dbString!==null && dbString !== undefined){\r\n        modelComments=JSON.parse(dbString.comments);\r\n        this.comments[i] = modelComments;\r\n      }\r\n      if(i===this.courses.length-1) { this.notifyObservers();}\r\n    });\r\n  });\r\n}\r\nsetDB(userId){\r\n  let modelObject = JSON.stringify(this);\r\n  firebase.database().ref('users/' + userId).set({\r\n    study_model: modelObject\r\n  });\r\n\r\n  this.courses.forEach((item, i) => {\r\n    var modelComment = JSON.stringify(this.comments[i]);\r\n    firebase.database().ref('courses/' + item).set({\r\n      comments: modelComment\r\n    });\r\n  });\r\n}\r\n\r\n  addCourse(name){\r\n    if(!this.courses.includes(name)){\r\n      this.courses=[name, ...this.courses];\r\n      this.deadlines=[[], ...this.deadlines];\r\n      this.comments=[[], ...this.comments];\r\n      //1) combine the arrays:\r\n      var list = [];\r\n      for (var j = 0; j < this.courses.length; j++)\r\n        list.push({'courses': this.courses[j], 'deadlines': this.deadlines[j], 'comments': this.comments[j]});\r\n\r\n        //2) sort:\r\n      list.sort(function(a, b) {\r\n        return ((a.courses < b.courses) ? -1 : ((a.courses === b.courses) ? 0 : 1));\r\n      //Sort could be modified to, for example, sort on the age\r\n      // if the name is the same.\r\n    });\r\n  //3) separate them back out:\r\n  for (var k = 0; k < list.length; k++) {\r\n      this.courses[k] = list[k].courses;\r\n      this.deadlines[k] = list[k].deadlines;\r\n      this.comments[k] = list[k].comments;\r\n    }\r\n    this.updateCourses();\r\n  }\r\n   }\r\n\r\n   removeCourse(course){\r\n     const index = this.courses.indexOf(course);\r\n    if (index > -1) {\r\n      this.courses.splice(index, 1);\r\n      this.deadlines.splice(index, 1);\r\n      this.comments.splice(index, 1);\r\n    }\r\n     if (course===this.currentCourse)\r\n        this.currentCourse=null\r\n     this.notifyObservers();\r\n   }\r\n\r\n    setCurrentCourse(course){\r\n      this.currentCourse=course;\r\n      this.notifyObservers();\r\n    }\r\n\r\n    addDeadline(courseName,name,date){\r\n      const index = this.getCourseIndex(courseName);\r\n      // this.deadlines[courseIndex] ger en lista [[courseName,name,date]]\r\n      this.deadlines[index]=[[courseName,name,date],...this.deadlines[index]];\r\n      this.deadlines[index].sort(function(a,b){\r\n          if(a[2]<b[2])\r\n            return -1;\r\n          else if(a[2]>b[2])\r\n            return 1;\r\n          else {\r\n            return 1\r\n          }\r\n        })\r\n      //dont touch or everything breaks\r\n      this.deadlines=[...this.deadlines];\r\n      this.notifyObservers();\r\n    }\r\n\r\n\r\n   removeDeadline(deadline){\r\n     const index=this.getCourseIndex(deadline[0]);\r\n     const itemIndex = this.deadlines[index].findIndex(item =>item[1]===deadline[1]&&item[2]===item[2]);\r\n\r\n     if (itemIndex > -1) {\r\n       this.deadlines[index].splice(itemIndex,1);\r\n     }\r\n     this.deadlines=[...this.deadlines];\r\n     this.notifyObservers();\r\n   }\r\n   getDeadlines(){\r\n     return this.deadlines;\r\n   }\r\n\r\n    addComment(comment,courseName){\r\n      //Currentcourse är namnet på valda kursen\r\n      const index = this.getCourseIndex(courseName);\r\n      this.comments[index]=[[comment,false],...this.comments[index]];\r\n      this.comments=[...this.comments]\r\n      this.notifyObservers();\r\n    }\r\n\r\n    checkBox(value){\r\n\r\n      const index=this.getCourseIndex(value[2]);\r\n      const commentIndex = this.comments[index].findIndex(ele => ele[0]===value[0]);\r\n      if (this.comments[index][commentIndex][1]===true)\r\n       this.comments[index][commentIndex][1]=false;\r\n       else{\r\n         this.comments[index][commentIndex][1]=true;\r\n\r\n       }\r\n       this.comments=[...this.comments]\r\n      this.notifyObservers();\r\n    }\r\n\r\n   removeComment(comment){\r\n     const index=this.getCourseIndex(comment[2]);\r\n     const commentIndex = this.comments[index].findIndex(ele => ele[0]===comment[0]);\r\n\r\n     if (index > -1) {\r\n       this.comments[index].splice(commentIndex,1);\r\n     }\r\n     this.comments=[...this.comments]\r\n\r\n     this.notifyObservers();\r\n   }\r\n\r\n   getCourseIndex(name){\r\n         const course = this.courses.findIndex(ele => ele===name);\r\n         return course\r\n     }\r\n\r\n  addObserver(callback){\r\n   this.subscribers=this.subscribers.concat(callback);\r\n  }\r\n  removeObserver(obs){\r\n  this.subscribers=this.subscribers.filter(o=>o!==obs);\r\n }\r\n  notifyObservers(){\r\n    this.subscribers.forEach(callback=> {\r\n  try{callback()}catch(err){\r\n        console.error(\"Error \", err, callback);}})\r\n  }\r\n}\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebar.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\home.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\settings.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\courseInfo.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\show.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\modelContext.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\course.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\sidebarDeadlines.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\settingsView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\glue.js",["115","116","117","118","119","120"],"import React from 'react';\r\nimport firebase from './../js/firebase.js';\r\nimport useModelProp from './useModelProp.js';\r\nimport CalendarSource from '../js/calendarSource.js';\r\nimport ModelContext from './modelContext.js';\r\nimport CanvasSource from '../js/canvasSource.js';\r\nimport usePromiseJSON from './usePromiseJSON.js';\r\nconst h= React.createElement;\r\n\r\nconst GlueToModel= (View)=>\r\n{\r\n  const model=React.useContext(ModelContext);\r\n  //Course\r\n  const [name,setName] = React.useState(null);\r\n  const [invalidName,setInvalidName]=React.useState(false)\r\n  const courses = useModelProp(model, \"courses\");\r\n  const deadlines = useModelProp(model,\"deadlines\");\r\n  const [latest,setLatest] = React.useState(\"\");\r\n\r\n  //Courseinfo\r\n  const currentCourse = useModelProp(model, \"currentCourse\");\r\n  const index = model.getCourseIndex(currentCourse);\r\n  const comments = useModelProp(model, \"comments\");\r\n  const [invalidCommentName,setInvalidCommentName] = React.useState(false);\r\n  const [commentName,setCommentName] = React.useState(null);\r\n  //SidebarDeadlines\r\n  const [deadlineName,setDeadlineName]= React.useState(\"\");\r\n  const [date,setDate]= React.useState(\"\");\r\n  const [courseType,setCourseType]= React.useState(courses[0]);\r\n  const [sidebarType,setSidebarType]= React.useState(\"All\");\r\n  const [invalidDate,setInvalidDate]= React.useState(true);\r\n  const [invalidDeadlineName,setInvalidDeadlineName]= React.useState(true);\r\n  const [noCourses,setNoCourses] = React.useState(false);\r\n  const [latestDeadline,setLatestDeadline] = React.useState([]);\r\n  const [deadlineIndex,setDeadlineIndex]=React.useState(-1)\r\n  //Reactfunctions for SidebarDeadlines\r\n  /* Makes sure courseType is updated when currentcourse is chnaged*/\r\n      React.useEffect(function(){\r\n        if (currentCourse!==null && currentCourse!==courseType)\r\n         setCourseType(currentCourse);\r\n      }, [currentCourse]);\r\n\r\n      React.useEffect(function(){\r\n        setCourseType(courses[0]);\r\n      },[courses[0]])\r\n\r\n\r\n      React.useEffect(function(){\r\n        if (courses.length===0)\r\n          setNoCourses(true);\r\n        else {\r\n          setNoCourses(false);\r\n        }\r\n      },[courses])\r\n\r\n      React.useEffect(function(){\r\n      deadlines.forEach(ele=>ele.forEach(elem=>{\r\n        if(elem[2]<today){\r\n          model.removeDeadline(elem);\r\n        }\r\n      }))\r\n    });\r\n\r\n  //Functions\r\nReact.useEffect(function(){\r\n  if (window.location.hash!==\"#course\")\r\n      model.setCurrentCourse(null)\r\n},[window.location.hash])\r\n\r\n\r\n  //CourseInfo\r\n  if (currentCourse === null && window.location.hash===\"#course\"){\r\n  window.location.hash=\"#courses\";\r\n  return false};\r\n\r\n  //SidebarDeadlines\r\n  let today = new Date().toISOString().slice(0, 10)\r\n\r\nreturn h(View, {\r\n  //Sidebar\r\n  moveCourses:()=> {window.location.hash=\"#courses\";},\r\n  moveHome:()=> {window.location.hash=\"#home\";},\r\n  username:firebase.auth().currentUser.displayName,\r\n  userimage:firebase.auth().currentUser.photoURL,\r\n  currentIndex:()=>{\r\n     if (window.location.hash === \"#courses\") {return 1;}\r\n     else if (window.location.hash === \"#settings\") {\r\n       return 3;\r\n     }\r\n     else if (window.location.hash === \"#home\") {\r\n       return 0;\r\n     }\r\n     else{return null;}},\r\n  logOut:()=>{\r\n    firebase.auth().signOut().then(() => {\r\n      console.log(\"+\")\r\n    }, function (error) {\r\n      console.log(\"-\")\r\n    });\r\n  },\r\n  canvasCourses:()=>{window.location.hash=\"#settings\";},\r\n  //Course\r\n  onTextCourse:(nam)=> {setName(nam);\r\n    courses.forEach(ele=>{\r\n    if(ele===nam){\r\n    setInvalidName(true)}\r\n    else{\r\n      setInvalidName(false)\r\n    }\r\n  })},\r\n  addCourse:()=> {model.addCourse(name)},\r\n  courses:courses,\r\n  invalidNameCourse:invalidName,\r\n  remove:(e)=>{  model.removeCourse(e)},\r\n  onCreateCourse:()=>{setLatest(name);model.addCourse(name)},\r\n  latest:latest,\r\n  goTo:(course)=>{model.setCurrentCourse(course); window.location.hash=\"#course\";},\r\n  //CourseInfo\r\n  currentCourse:currentCourse,\r\n  index:index,\r\n  comments:comments,\r\n  deadlinesInfo:deadlines[index],\r\n  onTextComment:(nam)=>{\r\n      setCommentName(nam);\r\n      if(comments!==undefined){\r\n      comments.forEach(ele=>{\r\n      if(ele[0]===nam)\r\n      setInvalidCommentName(true);\r\n        }\r\n      )}},\r\n  invalidCommentName:invalidCommentName,\r\n  onRemoveComment:(e)=>{model.removeComment(e)},\r\n  onCreateComment:()=>{model.addComment(commentName,currentCourse===null?courseType:currentCourse);setInvalidCommentName(false)},\r\n  onCheck:(value)=>model.checkBox(value),\r\n  nav:()=>{window.location.hash=\"#courses\";},\r\n  //SidebarDeadlines\r\n  noCourses:noCourses,\r\n  courseType:courseType,\r\n  type:sidebarType,\r\n  deadlineIndex:deadlineIndex,\r\n  deadlines:deadlines,\r\n  onCreate:()=>{\r\n   model.addDeadline(courseType,deadlineName,date);\r\n   setLatestDeadline([courseType,deadlineName,date])\r\n   setDate(\"\");\r\n   setDeadlineName(\"\");\r\n   setInvalidDeadlineName(true);\r\n   setInvalidDate(true);\r\n   CalendarSource.handleClientLoad();\r\n  },\r\n  onCourseType:cou=>{setCourseType(cou)},\r\n  onType: tp =>{setSidebarType(tp);setDeadlineIndex(model.getCourseIndex(tp))},\r\n  onRemove:e=>{console.log(\"delete deadline\");model.removeDeadline(e)},\r\n  onName:(nam)=> {\r\n   if (nam!==\"\"){\r\n   setInvalidDeadlineName(false);\r\n   setDeadlineName(nam)}\r\n else{setInvalidDeadlineName(true)}},\r\n  onDate:(dat)=> {\r\n   if (ValidateDate(dat,today)) {\r\n     setInvalidDate(false);\r\n     setDate(dat)}\r\n   else{setInvalidDate(true)}},\r\n  today:today,\r\n  date:date,\r\n  latestDeadline:latestDeadline,\r\n  invalidDeadlineName:invalidDeadlineName,\r\n  invalidDate:invalidDate,\r\n}\r\n);\r\n\r\nfunction ValidateDate(dt,today){\r\n const striptoday=today.split(\"-\")\r\n const stripdt= dt.split(\"-\");\r\n const year = stripdt[0];\r\n if (year>=striptoday[0] && year.length===4){\r\n   return true\r\n }\r\n else{\r\n return false;}}\r\n}\r\nexport default GlueToModel;\r\n\r\nconst GlueToSetting=(View)=>{\r\n  const model=React.useContext(ModelContext);\r\n  const [promise, setPromise]= React.useState(CanvasSource.getCourses());\r\n  const [data, error]= usePromiseJSON(promise);\r\n  const [promiseF, setPromiseF]= React.useState(CanvasSource.getFavouriteCourses());\r\n  const [dataF, errorF]= usePromiseJSON(promiseF);\r\n  const [key, setKey] = React.useState(\"\");\r\n\r\n  return h(View, {\r\n      updateCourses:()=> {\r\n        if(data!=null){\r\n          data.forEach(obj=>model.addCourse(obj.name))}\r\n          window.location.hash=\"#courses\"\r\n      },\r\n      updateFavouriteCourses:()=> {\r\n        if(dataF!=null){\r\n          dataF.forEach(obj=>model.addCourse(obj.name))\r\n        }\r\n        window.location.hash=\"#courses\"\r\n\r\n      },\r\n      setDefaultSource:()=>{\r\n        setPromise(CanvasSource.getCourses());\r\n        setPromiseF(CanvasSource.getFavouriteCourses())},\r\n      setCustomSource:()=>{\r\n        setPromise(CanvasSource.customGetCourses(key));\r\n        setPromiseF(CanvasSource.customGetFavouriteCourses(key))},\r\n      setKey:(input)=>{setKey(input)}\r\n    })\r\n}\r\nexport {GlueToSetting};\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\homeView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\courseInfoView.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\views\\sidebarDeadlinesView.js",["121"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {drawerWidth} from './../layoutVars.js';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 4,\r\n    width: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  filter:{\r\n    marginLeft:10,\r\n  },\r\n  menu:{\r\n  width: 200,\r\n},\r\nadd:{\r\nmarginTop: 10,\r\n},\r\n  formControl:{\r\n    minWidth: 120,\r\n\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  cellDeadline:{\r\n    maxWidth: 95,\r\n    wordWrap: 'break-word',\r\n  },\r\n}));\r\n\r\nexport const SidebarDeadlinesView=({noCourses,today,date,courses,deadlineIndex,latestDeadline,courseType,type,onType,onRemove,onDate,onCourseType,deadlines,onCreate,onName,invalidDeadlineName,invalidDate})=> {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deadlinesList, setDeadlinesList] = React.useState([]);\r\n  function handleClose(){setOpen(false)}\r\n  function handleClickOpen(){setOpen(true)}\r\n  function handleCloseAdd(){setOpen(false);onCreate()}\r\n  // deadlineIndex is used to keep track if filter is all or spesific list of deadlines.\r\n   function getCourses() {\r\n     if (deadlineIndex >= 0) return setDeadlinesList(deadlines[deadlineIndex]);\r\n     setDeadlinesList(getAllDeadlines())\r\n   }\r\n\r\n  function getAllDeadlines(){\r\n    var list=[];\r\n    // deadlines     [courseName,Name,Date]\r\n    if (deadlines===undefined)\r\n       return []\r\n   deadlines.forEach(elemen => elemen.forEach(ele=>{if(ele.length>0)list.push(ele)}));\r\n    if (list.length===0){\r\n      return []\r\n    }\r\n    list.sort(function(a,b){\r\n        if(a[2]<b[2])\r\n          return -1;\r\n        else if(a[2]>b[2])\r\n          return 1;\r\n        else {\r\n          return 1\r\n        }\r\n      })\r\n    return list\r\n  }\r\n\r\n  React.useEffect(function(){\r\n     getCourses();\r\n  }, [deadlineIndex,deadlines]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n        {/*Header*/}\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar} >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Deadlines\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n        {/*Sidebar, Displays deadlines*/}\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n      {/*New Deadline Button/Window*/}\r\n\r\n        <div className={classes.toolbar} />\r\n\r\n        <div align=\"center\">\r\n        <Button onClick={handleClickOpen} variant=\"outlined\" disabled={noCourses} className={classes.add}>Add deadline</Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">New deadline</DialogTitle>\r\n              <DialogContent>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n                  Course\r\n                </InputLabel>\r\n                <Select\r\n                  value={courseType}\r\n                  labelId=\"demo-simple-select-placeholder-label-label\"\r\n                  id=\"demo-simple-select-placeholder-label\"\r\n                  onChange={(event)=>{onCourseType(event.target.value)}}\r\n\r\n                >\r\n                {courses.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n\r\n\r\n                </Select>\r\n              </FormControl>\r\n              <InputLabel shrink id=\"name\">\r\n                Name\r\n              </InputLabel>\r\n                <TextField\r\n                  onChange={(event)=>onName(event.target.value)}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  error={invalidDeadlineName}\r\n                  helperText={invalidDeadlineName?'Empty field':''}\r\n                  onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter' && !invalidDate && !invalidDeadlineName && today<date) {\r\n                                handleCloseAdd()\r\n                                }\r\n                              }}\r\n                />\r\n                <InputLabel shrink id=\"date\">\r\n                  Date\r\n                </InputLabel>\r\n                <TextField\r\n                  onChange={(event)=>{onDate(event.target.value)}}\r\n                  autoFocus\r\n                  placeholder=\"yyyy-mm-dd\"\r\n                  margin=\"dense\"\r\n                  min={today}\r\n                  id=\"date\"\r\n                  type=\"date\"\r\n                  error={invalidDate||today>date}\r\n                  helperText={invalidDate?'Invalid input':today>date?'Date has passed':''}\r\n                  onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter' && !invalidDate && !invalidDeadlineName && today<date) {\r\n                                handleCloseAdd()\r\n                                }\r\n                              }}\r\n                  fullWidth\r\n                />\r\n\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleCloseAdd} disabled={invalidDeadlineName||invalidDate||today>date} color=\"primary\">\r\n                  Add\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        <div className={classes.filter}>\r\n        Filter:\r\n        <span> </span>\r\n        <Select\r\n          labelId=\"select\"\r\n          id=\"select\"\r\n          value={type}\r\n          onChange={(event)=>{onType(event.target.value)}}\r\n        >\r\n        <MenuItem key=\"All\" value=\"All\" align=\"center\">All</MenuItem>\r\n        {courses.map((option) => (\r\n          <MenuItem key={option} value={option} align=\"center\">\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n        </Select>\r\n\r\n        </div>\r\n        <Divider />\r\n\r\n         <Table >\r\n           <TableHead>\r\n             <TableRow>\r\n               <TableCell>Course</TableCell>\r\n               <TableCell align=\"right\">Name</TableCell>\r\n               <TableCell align=\"right\">Deadline</TableCell>\r\n               <TableCell  className={classes.small}  width={50}> </TableCell>\r\n             </TableRow>\r\n           </TableHead>\r\n           <TableBody>\r\n             {deadlinesList.map((row) => (\r\n               <TableRow key={row}  width={335}style={{background:latestDeadline[0]===row[0]&&latestDeadline[1]===row[1]&&latestDeadline[2]===row[2]?fade('#555555', 0.06):\"primary\"}}>\r\n               <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                 {row[0]}\r\n               </TableCell>\r\n                 <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                   {row[1]}\r\n                 </TableCell>\r\n                 <TableCell component=\"th\" scope=\"row\" className={classes.cellDeadline}>\r\n                  {row[2]}\r\n                 </TableCell>\r\n                 <TableCell>\r\n                 <Button onClick={()=>{onRemove(row)}} size=\"small\">\r\n                   <DeleteIcon className={classes.icon} />\r\n                 </Button>\r\n                 </TableCell>\r\n               </TableRow>\r\n          ))}\r\n           </TableBody>\r\n         </Table>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\layoutVars.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\useModelProp.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\reactjs\\usePromiseJSON.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\calendarSource.js",["122"],"/* global gapi */\r\n\r\nimport {API_KEY} from './apiConfig.js';\r\nimport {CLIENT_ID} from './apiConfig.js';\r\nimport {readModel} from './readModel.js';\r\n\r\nimport useModelProp from './../reactjs/useModelProp.js'\r\n\r\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\r\nconst SCOPES = \"https://www.googleapis.com/auth/calendar\";\r\n\r\nconst CalendarSource={\r\n  handleClientLoad(){\r\n    gapi.load('client:auth2', initClient);\r\n  }\r\n}\r\n\r\nvar initClient=(function(){\r\n  gapi.client.init({\r\n    apiKey: API_KEY,\r\n    clientId: CLIENT_ID,\r\n    discoveryDocs: DISCOVERY_DOCS,\r\n    scope: SCOPES\r\n  }).then(function () {\r\n  // Listen for sign-in state changes.\r\n  gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\r\n  // Handle the initial sign-in state.\r\n  updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\r\n}, (error)=> {\r\n  console.log(JSON.stringify(error, null, 2))\r\n});\r\n})\r\n\r\nfunction updateSigninStatus(isSignedIn) {\r\n  if (isSignedIn) {\r\n    updateCalender();\r\n  }\r\n  else{\r\n    gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n}\r\n\r\nfunction  updateCalender() {\r\n  gapi.client.calendar.events.list({\r\n    'calendarId': 'primary',\r\n    'timeMin': (new Date()).toISOString(),\r\n    'showDeleted': false,\r\n    'singleEvents': true,    'maxResults': 100,\r\n    'orderBy': 'startTime'\r\n  }).then(function(response) {\r\n    var events = response.result.items;\r\n    var eventSummary=[];\r\n    if (events.length > 0) {\r\n      var i = 0;\r\n      for (i = 0; i < events.length; i++) {\r\n        var event = events[i];\r\n        var when = event.start.date;\r\n        if (!when) {\r\n          when = event.start.date;\r\n        }\r\n        eventSummary =[event.summary, ...eventSummary]\r\n        eventSummary =[event.start.date, ...eventSummary]\r\n        eventSummary =[event.description, ...eventSummary]\r\n      }\r\n    }\r\n    const model = readModel();\r\n    var deadlines = model.getDeadlines();\r\n    deadlines.forEach(course=> {\r\n      course.forEach(item => {\r\n      if(item[0]!=null&&item[1]!=null&&item[2]!=null){\r\n      var newEvent = createEvent(item[1], item[2], item[0]);\r\n      if(!(eventSummary.includes(newEvent.summary)&&eventSummary.includes(newEvent.description)&&eventSummary.includes(newEvent.start.date))){\r\n        postEvent(newEvent);\r\n      }\r\n    }\r\n  })})\r\n\r\n  });\r\n}\r\nfunction createEvent(name, date, course){\r\n  var event = {\r\n    'summary': name,\r\n    'colorId': \"10\",\r\n    'description': course,\r\n    'start': {\r\n      'date': date,\r\n      'timeZone': 'Europe/Stockholm'\r\n    },\r\n    'end': {\r\n      'date': date,\r\n      'timeZone': 'Europe/Stockholm'\r\n    }\r\n  }\r\n  return event;\r\n}\r\n\r\nfunction postEvent(event){\r\n  var request = gapi.client.calendar.events.insert({\r\n    'calendarId': 'primary',\r\n    'resource': event\r\n  });\r\n\r\n  request.execute(function(event) {\r\n    console.log('Event created: ' + event.htmlLink + '\\n');\r\n  });\r\n}\r\n\r\nexport default CalendarSource;\r\n","C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\canvasSource.js",[],"C:\\Users\\William\\github\\QstudyMouse\\StudyMouse\\src\\js\\apiConfig.js",[],["123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":137,"column":86,"nodeType":"131","messageId":"132","endLine":137,"endColumn":103},{"ruleId":"133","severity":1,"message":"134","line":41,"column":10,"nodeType":"135","endLine":41,"endColumn":25,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":45,"column":9,"nodeType":"135","endLine":45,"endColumn":21,"suggestions":"138"},{"ruleId":"133","severity":1,"message":"139","line":45,"column":10,"nodeType":"140","endLine":45,"endColumn":20},{"ruleId":"133","severity":1,"message":"141","line":68,"column":3,"nodeType":"135","endLine":68,"endColumn":25,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":187,"column":16,"nodeType":"145","messageId":"146","endLine":187,"endColumn":21},{"ruleId":"143","severity":1,"message":"147","line":189,"column":17,"nodeType":"145","messageId":"146","endLine":189,"endColumn":23},{"ruleId":"133","severity":1,"message":"148","line":105,"column":6,"nodeType":"135","endLine":105,"endColumn":31,"suggestions":"149"},{"ruleId":"143","severity":1,"message":"150","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":20},{"ruleId":"125","replacedBy":"151"},{"ruleId":"127","replacedBy":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'courseType'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook React.useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.",["156"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook React.useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. Outer scope values like 'window.location.hash' aren't valid dependencies because mutating them doesn't re-render the component.",["157"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'errorF' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getCourses'. Either include it or remove the dependency array.",["158"],"'useModelProp' is defined but never used.",["153"],["154"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [courseType, currentCourse]",{"range":"167","text":"168"},"Update the dependencies array to be: [courses]",{"range":"169","text":"170"},"Update the dependencies array to be: [model]",{"range":"171","text":"172"},"Update the dependencies array to be: [deadlineIndex, deadlines, getCourses]",{"range":"173","text":"174"},[1878,1893],"[courseType, currentCourse]",[1978,1990],"[courses]",[2485,2507],"[model]",[3370,3395],"[deadlineIndex, deadlines, getCourses]"]